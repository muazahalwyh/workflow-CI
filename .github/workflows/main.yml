name: CI/CD MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLProject/data_bersih_preprocessing.csv"
  TARGET_VAR: "Churn Label"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Setup Python 3.11.3
      - name: Set up Python 3.11.3
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL
          
      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow  
          
      # Run as a mlflow project
      - name: Run mlflow project
        run: |
          mlflow run MLProject \
            --env-manager=local \
            -P n_estimators=505 \
            -P max_depth=35 \
            -P dataset="MLProject/data_bersih_preprocessing.csv"

      
      # Save models to GitHub Repository
      - name: Save mlruns to repo
        run: |
          git config --global user.name ${{ secrets.username }}
          git config --global user.email ${{ secrets.email }}
          git add mlruns/
          git commit -m "Save mlruns from CI run"
          git push origin master
      
      # Get latest run_id
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"
          
      # Build Docker Model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "cc" 

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag cc ${{ secrets.DOCKER_HUB_USERNAME }}/cc:latest

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cc:latest